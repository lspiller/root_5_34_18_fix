//
// File generated by core/utils/src/rootcint_tmp at Tue Jan 19 10:49:48 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME iodIdcachedIsrcdIG__DCache
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "G__DCache.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TDCacheFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TDCacheFile(void *p);
   static void deleteArray_TDCacheFile(void *p);
   static void destruct_TDCacheFile(void *p);
   static void streamer_TDCacheFile(TBuffer &buf, void *obj);
   static void reset_TDCacheFile(void *obj, TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDCacheFile*)
   {
      ::TDCacheFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDCacheFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDCacheFile", ::TDCacheFile::Class_Version(), "include/TDCacheFile.h", 42,
                  typeid(::TDCacheFile), DefineBehavior(ptr, ptr),
                  &::TDCacheFile::Dictionary, isa_proxy, 0,
                  sizeof(::TDCacheFile) );
      instance.SetDelete(&delete_TDCacheFile);
      instance.SetDeleteArray(&deleteArray_TDCacheFile);
      instance.SetDestructor(&destruct_TDCacheFile);
      instance.SetStreamerFunc(&streamer_TDCacheFile);
      instance.SetResetAfterMerge(&reset_TDCacheFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDCacheFile*)
   {
      return GenerateInitInstanceLocal((::TDCacheFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDCacheFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TDCacheSystem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TDCacheSystem(void *p = 0);
   static void *newArray_TDCacheSystem(Long_t size, void *p);
   static void delete_TDCacheSystem(void *p);
   static void deleteArray_TDCacheSystem(void *p);
   static void destruct_TDCacheSystem(void *p);
   static void streamer_TDCacheSystem(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TDCacheSystem*)
   {
      ::TDCacheSystem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TDCacheSystem >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TDCacheSystem", ::TDCacheSystem::Class_Version(), "include/TDCacheFile.h", 96,
                  typeid(::TDCacheSystem), DefineBehavior(ptr, ptr),
                  &::TDCacheSystem::Dictionary, isa_proxy, 0,
                  sizeof(::TDCacheSystem) );
      instance.SetNew(&new_TDCacheSystem);
      instance.SetNewArray(&newArray_TDCacheSystem);
      instance.SetDelete(&delete_TDCacheSystem);
      instance.SetDeleteArray(&deleteArray_TDCacheSystem);
      instance.SetDestructor(&destruct_TDCacheSystem);
      instance.SetStreamerFunc(&streamer_TDCacheSystem);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TDCacheSystem*)
   {
      return GenerateInitInstanceLocal((::TDCacheSystem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TDCacheSystem*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TDCacheFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDCacheFile::Class_Name()
{
   return "TDCacheFile";
}

//______________________________________________________________________________
const char *TDCacheFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCacheFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDCacheFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCacheFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDCacheFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCacheFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDCacheFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCacheFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TDCacheSystem::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TDCacheSystem::Class_Name()
{
   return "TDCacheSystem";
}

//______________________________________________________________________________
const char *TDCacheSystem::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCacheSystem*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TDCacheSystem::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TDCacheSystem*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TDCacheSystem::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCacheSystem*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TDCacheSystem::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TDCacheSystem*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TDCacheFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDCacheFile.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TFile::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TDCacheFile::IsA());
   } else {
      R__c = R__b.WriteVersion(TDCacheFile::IsA(), kTRUE);
      TFile::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TDCacheFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDCacheFile.
      TClass *R__cl = ::TDCacheFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatCached", &fStatCached);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStatBuffer", (void*)&fStatBuffer);
      R__insp.InspectMember("TDCacheFile::stat64", (void*)&fStatBuffer, "fStatBuffer.", true);
      TFile::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TDCacheFile(void *p) {
      delete ((::TDCacheFile*)p);
   }
   static void deleteArray_TDCacheFile(void *p) {
      delete [] ((::TDCacheFile*)p);
   }
   static void destruct_TDCacheFile(void *p) {
      typedef ::TDCacheFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDCacheFile(TBuffer &buf, void *obj) {
      ((::TDCacheFile*)obj)->::TDCacheFile::Streamer(buf);
   }
   // Wrapper around the Reset function.
   static void reset_TDCacheFile(void *obj,TFileMergeInfo *info) {
      ((::TDCacheFile*)obj)->ResetAfterMerge(info);
   }
} // end of namespace ROOT for class ::TDCacheFile

//______________________________________________________________________________
void TDCacheSystem::Streamer(TBuffer &R__b)
{
   // Stream an object of class TDCacheSystem.

   TSystem::Streamer(R__b);
}

//______________________________________________________________________________
void TDCacheSystem::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TDCacheSystem.
      TClass *R__cl = ::TDCacheSystem::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDirp", &fDirp);
      TSystem::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TDCacheSystem(void *p) {
      return  p ? new(p) ::TDCacheSystem : new ::TDCacheSystem;
   }
   static void *newArray_TDCacheSystem(Long_t nElements, void *p) {
      return p ? new(p) ::TDCacheSystem[nElements] : new ::TDCacheSystem[nElements];
   }
   // Wrapper around operator delete
   static void delete_TDCacheSystem(void *p) {
      delete ((::TDCacheSystem*)p);
   }
   static void deleteArray_TDCacheSystem(void *p) {
      delete [] ((::TDCacheSystem*)p);
   }
   static void destruct_TDCacheSystem(void *p) {
      typedef ::TDCacheSystem current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TDCacheSystem(TBuffer &buf, void *obj) {
      ((::TDCacheSystem*)obj)->::TDCacheSystem::Streamer(buf);
   }
} // end of namespace ROOT for class ::TDCacheSystem

/********************************************************
* io/dcache/src/G__DCache.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableG__DCache();

extern "C" void G__set_cpp_environmentG__DCache() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TDCacheFile.h");
  G__cpp_reset_tagtableG__DCache();
}
#include <new>
extern "C" int G__cpp_dllrevG__DCache() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TDCacheFile */
static int G__G__DCache_210_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDCacheFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) TDCacheFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TDCacheFile(
(const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TDCacheFile((const char*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TDCacheFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) TDCacheFile::Stage((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) TDCacheFile::Stage((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) TDCacheFile::CheckFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) TDCacheFile::CheckFile((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDCacheFile::SetOpenTimeout((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TDCacheFile::SetOnError((TDCacheFile::EOnErrorAction) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TDCacheFile::SetOnError();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDCacheFile::SetReplyHostName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheFile::GetDcapVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = TDCacheFile::GetDcapPath((const char*) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDCacheFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDCacheFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDCacheFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCacheFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCacheFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_210_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCacheFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDCacheFile G__TTDCacheFile;
static int G__G__DCache_210_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDCacheFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDCacheFile*) (soff+(sizeof(TDCacheFile)*i)))->~G__TTDCacheFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDCacheFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDCacheFile*) (soff))->~G__TTDCacheFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TDCacheSystem */
static int G__G__DCache_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TDCacheSystem* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheSystem[n];
     } else {
       p = new((void*) gvp) TDCacheSystem[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TDCacheSystem;
     } else {
       p = new((void*) gvp) TDCacheSystem;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TDCacheSystem::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheSystem::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TDCacheSystem::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TDCacheSystem::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TDCacheSystem*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheSystem::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCacheSystem::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TDCacheSystem::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__G__DCache_213_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TDCacheSystem::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TDCacheSystem G__TTDCacheSystem;
static int G__G__DCache_213_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TDCacheSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TDCacheSystem*) (soff+(sizeof(TDCacheSystem)*i)))->~G__TTDCacheSystem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TDCacheSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TDCacheSystem*) (soff))->~G__TTDCacheSystem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TDCacheFile */

/* TDCacheSystem */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncG__DCache {
 public:
  G__Sizep2memfuncG__DCache(): p(&G__Sizep2memfuncG__DCache::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncG__DCache::*p)();
};

size_t G__get_sizep2memfuncG__DCache()
{
  G__Sizep2memfuncG__DCache a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceG__DCache() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile))) {
     TDCacheFile *G__Lderived;
     G__Lderived=(TDCacheFile*)0x1000;
     {
       TFile *G__Lpbase=(TFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile),G__get_linked_tagnum(&G__G__DCacheLN_TFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDirectoryFile *G__Lpbase=(TDirectoryFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile),G__get_linked_tagnum(&G__G__DCacheLN_TDirectoryFile),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDirectory *G__Lpbase=(TDirectory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile),G__get_linked_tagnum(&G__G__DCacheLN_TDirectory),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile),G__get_linked_tagnum(&G__G__DCacheLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile),G__get_linked_tagnum(&G__G__DCacheLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem))) {
     TDCacheSystem *G__Lderived;
     G__Lderived=(TDCacheSystem*)0x1000;
     {
       TSystem *G__Lpbase=(TSystem*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem),G__get_linked_tagnum(&G__G__DCacheLN_TSystem),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem),G__get_linked_tagnum(&G__G__DCacheLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem),G__get_linked_tagnum(&G__G__DCacheLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableG__DCache() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__G__DCacheLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TDCacheFile */
static void G__setup_memvarTDCacheFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile));
   { TDCacheFile *p; p=(TDCacheFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fStatCached=",0,"! (transient) is file status cached?");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFilecLcLstat64),-1,-1,4,"fStatBuffer=",0,"! (transient) Cached file status buffer (for performance)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction),-1,-2,1,G__FastAllocString(2048).Format("kOnErrorRetry=%lldLL",(long long)TDCacheFile::kOnErrorRetry).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction),-1,-2,1,G__FastAllocString(2048).Format("kOnErrorFail=%lldLL",(long long)TDCacheFile::kOnErrorFail).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction),-1,-2,1,G__FastAllocString(2048).Format("kOnErrorDefault=%lldLL",(long long)TDCacheFile::kOnErrorDefault).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DCacheLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TDCacheSystem */
static void G__setup_memvarTDCacheSystem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem));
   { TDCacheSystem *p; p=(TDCacheSystem*)0x1000; if (p) { }
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fDirp=",0,"directory handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__G__DCacheLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarG__DCache() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTDCacheFile(void) {
   /* TDCacheFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile));
   G__memfunc_setup("TDCacheFile",1004,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SysOpen",721,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"C - - 10 - pathname i - 'Int_t' 0 - flags "
"h - 'UInt_t' 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysClose",821,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - fd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysRead",699,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - fd Y - - 0 - buf "
"i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysWrite",842,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - fd Y - - 10 - buf "
"i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysSeek",711,(G__InterfaceMethod) NULL, 110, -1, G__defined_typename("Long64_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - fd n - 'Long64_t' 0 - offset "
"i - 'Int_t' 0 - whence", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysStat",731,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 4, 0, 
"i - 'Int_t' 0 - fd L - 'Long_t' 0 - id "
"N - 'Long64_t' 0 - size L - 'Long_t' 0 - flags "
"L - 'Long_t' 0 - modtime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SysSync",732,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 0 - fd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDCacheFile",1004,G__G__DCache_210_0_9, 105, G__get_linked_tagnum(&G__G__DCacheLN_TDCacheFile), -1, 0, 4, 1, 1, 0, 
"C - - 10 - path C - 'Option_t' 10 '\"\"' option "
"C - - 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 0 - buf i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffer",982,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 0 - buf n - 'Long64_t' 0 - pos "
"i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("WriteBuffer",1125,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - buf i - 'Int_t' 0 - len", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadBuffers",1097,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 0 - buf N - 'Long64_t' 0 - pos "
"I - 'Int_t' 0 - len i - 'Int_t' 0 - nbuf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ResetErrno",1033,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Stage",500,G__G__DCache_210_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"C - - 10 - path h - 'UInt_t' 0 - secs "
"C - - 10 '0' location", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*, UInt_t, const char*))(&TDCacheFile::Stage) ), 0);
   G__memfunc_setup("CheckFile",862,G__G__DCache_210_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"C - - 10 - path C - - 10 '0' location", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const char*, const char*))(&TDCacheFile::CheckFile) ), 0);
   G__memfunc_setup("SetOpenTimeout",1445,G__G__DCache_210_0_17, 121, -1, -1, 0, 1, 3, 1, 0, "h - 'UInt_t' 0 - secs", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t))(&TDCacheFile::SetOpenTimeout) ), 0);
   G__memfunc_setup("SetOnError",1011,G__G__DCache_210_0_18, 121, -1, -1, 0, 1, 3, 1, 0, "i 'TDCacheFile::EOnErrorAction' - 0 'kOnErrorDefault' -", (char*)NULL, (void*) G__func2void( (void (*)(TDCacheFile::EOnErrorAction))(&TDCacheFile::SetOnError) ), 0);
   G__memfunc_setup("SetReplyHostName",1623,G__G__DCache_210_0_19, 121, -1, -1, 0, 1, 3, 1, 0, "C - - 10 - host_name", (char*)NULL, (void*) G__func2void( (void (*)(const char*))(&TDCacheFile::SetReplyHostName) ), 0);
   G__memfunc_setup("GetDcapVersion",1406,G__G__DCache_210_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheFile::GetDcapVersion) ), 0);
   G__memfunc_setup("GetDcapPath",1061,G__G__DCache_210_0_21, 117, G__get_linked_tagnum(&G__G__DCacheLN_TString), -1, 0, 1, 3, 1, 0, "C - - 10 - path", (char*)NULL, (void*) G__func2void( (TString (*)(const char*))(&TDCacheFile::GetDcapPath) ), 0);
   G__memfunc_setup("Class",502,G__G__DCache_210_0_22, 85, G__get_linked_tagnum(&G__G__DCacheLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDCacheFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__DCache_210_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__DCache_210_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDCacheFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__DCache_210_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDCacheFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__DCacheLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__DCache_210_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__DCache_210_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__DCache_210_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCacheFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__DCache_210_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__DCache_210_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCacheFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDCacheFile", 1130, G__G__DCache_210_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTDCacheSystem(void) {
   /* TDCacheSystem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem));
   G__memfunc_setup("GetDirPtr",885,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TDCacheSystem",1265,G__G__DCache_213_0_2, 105, G__get_linked_tagnum(&G__G__DCacheLN_TDCacheSystem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeDirectory",1331,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("OpenDirectory",1351,(G__InterfaceMethod) NULL,89, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FreeDirectory",1335,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "Y - - 0 - dirp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirEntry",1105,(G__InterfaceMethod) NULL,67, -1, -1, 0, 1, 1, 1, 1, "Y - - 0 - dirp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathInfo",1081,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 10 - path u 'FileStat_t' - 1 - buf", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AccessPathName",1376,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - path i 'EAccessMode' - 0 - mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__G__DCache_213_0_9, 85, G__get_linked_tagnum(&G__G__DCacheLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TDCacheSystem::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__G__DCache_213_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheSystem::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__G__DCache_213_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TDCacheSystem::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__G__DCache_213_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TDCacheSystem::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__G__DCacheLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__G__DCache_213_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__G__DCache_213_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheSystem::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__G__DCache_213_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCacheSystem::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__G__DCache_213_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TDCacheSystem::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__G__DCache_213_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TDCacheSystem::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TDCacheSystem", 1391, G__G__DCache_213_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncG__DCache() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalG__DCache() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcG__DCache() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__G__DCacheLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__G__DCacheLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TDirectoryFile = { "TDirectoryFile" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TSystem = { "TSystem" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_EAccessMode = { "EAccessMode" , 101 , -1 };
G__linked_taginfo G__G__DCacheLN_FileStat_t = { "FileStat_t" , 115 , -1 };
G__linked_taginfo G__G__DCacheLN_TDCacheFile = { "TDCacheFile" , 99 , -1 };
G__linked_taginfo G__G__DCacheLN_TDCacheFilecLcLstat64 = { "TDCacheFile::stat64" , 115 , -1 };
G__linked_taginfo G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction = { "TDCacheFile::EOnErrorAction" , 101 , -1 };
G__linked_taginfo G__G__DCacheLN_TDCacheSystem = { "TDCacheSystem" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableG__DCache() {
  G__G__DCacheLN_TClass.tagnum = -1 ;
  G__G__DCacheLN_TBuffer.tagnum = -1 ;
  G__G__DCacheLN_TDirectory.tagnum = -1 ;
  G__G__DCacheLN_TMemberInspector.tagnum = -1 ;
  G__G__DCacheLN_TObject.tagnum = -1 ;
  G__G__DCacheLN_TNamed.tagnum = -1 ;
  G__G__DCacheLN_TString.tagnum = -1 ;
  G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__G__DCacheLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__G__DCacheLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__G__DCacheLN_TFile.tagnum = -1 ;
  G__G__DCacheLN_TDirectoryFile.tagnum = -1 ;
  G__G__DCacheLN_TSystem.tagnum = -1 ;
  G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__G__DCacheLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__G__DCacheLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__G__DCacheLN_EAccessMode.tagnum = -1 ;
  G__G__DCacheLN_FileStat_t.tagnum = -1 ;
  G__G__DCacheLN_TDCacheFile.tagnum = -1 ;
  G__G__DCacheLN_TDCacheFilecLcLstat64.tagnum = -1 ;
  G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction.tagnum = -1 ;
  G__G__DCacheLN_TDCacheSystem.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableG__DCache() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TClass);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TObject);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TNamed);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TString);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TFile);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDirectoryFile);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TSystem);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_EAccessMode);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_FileStat_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDCacheFile),sizeof(TDCacheFile),-1,62720,"A ROOT file that reads/writes via a dCache server",G__setup_memvarTDCacheFile,G__setup_memfuncTDCacheFile);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDCacheFilecLcLstat64);
   G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDCacheFilecLcLEOnErrorAction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__G__DCacheLN_TDCacheSystem),sizeof(TDCacheSystem),-1,62720,"Directory handler for DCache",G__setup_memvarTDCacheSystem,G__setup_memfuncTDCacheSystem);
}
extern "C" void G__cpp_setupG__DCache(void) {
  G__check_setup_version(30051515,"G__cpp_setupG__DCache()");
  G__set_cpp_environmentG__DCache();
  G__cpp_setup_tagtableG__DCache();

  G__cpp_setup_inheritanceG__DCache();

  G__cpp_setup_typetableG__DCache();

  G__cpp_setup_memvarG__DCache();

  G__cpp_setup_memfuncG__DCache();
  G__cpp_setup_globalG__DCache();
  G__cpp_setup_funcG__DCache();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncG__DCache();
  return;
}
class G__cpp_setup_initG__DCache {
  public:
    G__cpp_setup_initG__DCache() { G__add_setup_func("G__DCache",(G__incsetup)(&G__cpp_setupG__DCache)); G__call_setup_funcs(); }
   ~G__cpp_setup_initG__DCache() { G__remove_setup_func("G__DCache"); }
};
G__cpp_setup_initG__DCache G__cpp_setup_initializerG__DCache;

